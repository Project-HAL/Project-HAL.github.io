<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classWaveDetector" kind="class" language="C++" prot="public">
    <compoundname>WaveDetector</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classWaveDetector_1a1b03f5ba903e44a002b8c38cb7d28880" prot="private" static="no" mutable="no">
        <type><ref refid="classChannelWindow" kindref="compound">ChannelWindow</ref> *</type>
        <definition>ChannelWindow* WaveDetector::window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="162" column="23" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1a3956713b66b71c3b9b38fc3349c23423" prot="private" static="no" mutable="no">
        <type><ref refid="structWaveMetadata" kindref="compound">WaveMetadata</ref> *</type>
        <definition>WaveMetadata* WaveDetector::metadata</definition>
        <argsstring></argsstring>
        <name>metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="164" column="22" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1a9517f06ddc7b8f0e2973b12097170986" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int WaveDetector::framesPerSec</definition>
        <argsstring></argsstring>
        <name>framesPerSec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="165" column="13" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1ae3598ac880a5f71a318f215124bc98ed" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int WaveDetector::minFrames</definition>
        <argsstring></argsstring>
        <name>minFrames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="166" column="13" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1abb6f03715b1a0d64537b089397a70c05" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float WaveDetector::threshold</definition>
        <argsstring></argsstring>
        <name>threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="167" column="15" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1afdc4ad4814343b23503411dd6d7d49d1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int WaveDetector::totalElectrodes</definition>
        <argsstring></argsstring>
        <name>totalElectrodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="168" column="13" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1a1e0436c40195f6574ca3c2df5b9f5f4c" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float WaveDetector::firstBurstThreshold</definition>
        <argsstring></argsstring>
        <name>firstBurstThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="169" column="15" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWaveDetector_1a006b51609f6cfa1646a8b048b645fa8e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float WaveDetector::burstDoneThreshold</definition>
        <argsstring></argsstring>
        <name>burstDoneThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="170" column="15" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classWaveDetector_1a9dc0fec49023ac3a388568180575ee7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaveDetector::WaveDetector</definition>
        <argsstring>()</argsstring>
        <name>WaveDetector</name>
        <briefdescription>
<para>Constructs a new Wave Detector object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="82" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1aac49842bb930f2bbb174b60855c17aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaveDetector::WaveDetector</definition>
        <argsstring>(int windowLength, const char *configPath, float threshold, int minFrames, int frameHz, float firstBurstThreshold, float burstDoneThreshold)</argsstring>
        <name>WaveDetector</name>
        <param>
          <type>int</type>
          <declname>windowLength</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>configPath</declname>
        </param>
        <param>
          <type>float</type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minFrames</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frameHz</declname>
        </param>
        <param>
          <type>float</type>
          <declname>firstBurstThreshold</declname>
        </param>
        <param>
          <type>float</type>
          <declname>burstDoneThreshold</declname>
        </param>
        <briefdescription>
<para>Constructs a new Wave Detector object and inititalizes the window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>windowLength</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>int</computeroutput> length of the window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>configPath</parametername>
</parameternamelist>
<parameterdescription>
<para>c-style string containing the full path of the electrode config </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> threshold used to check the total spike count against </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minFrames</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>int</computeroutput> minimum number of frames during which the window must be over the spike threshold in order to be considered a burst </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameHz</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>int</computeroutput> framerate, defaults to <computeroutput>10000</computeroutput>. It shoud be <computeroutput>10000</computeroutput> for the MaxTwo, and <computeroutput>20000</computeroutput> for the MaxOne </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstBurstThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> the amount of time (in seconds) during which the total spike count of the window cannot go over the threshold in order for the first birst to be considered done. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>burstDoneThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>float</computeroutput> the amount of time (in seconds) during which the total spike count of the window cannot go over the threshold in order for the entire birst to be considered done. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="110" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1af493cc823e9388b83a3fc6bf8c48b159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WaveDetector::~WaveDetector</definition>
        <argsstring>()</argsstring>
        <name>~WaveDetector</name>
        <briefdescription>
<para>Destroys the Wave Detector Object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="115" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1ab85b28fe6599e109456d3e0da0e4306b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classChannelWindow" kindref="compound">ChannelWindow</ref> *</type>
        <definition>ChannelWindow* WaveDetector::getWindow</definition>
        <argsstring>()</argsstring>
        <name>getWindow</name>
        <briefdescription>
<para>Returns the window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>pointer to <computeroutput><ref refid="classChannelWindow" kindref="compound">ChannelWindow</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="122" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1a87a66c6a4abba427c2826e80ca7b7444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structWaveMetadata" kindref="compound">WaveMetadata</ref></type>
        <definition>WaveMetadata WaveDetector::getMetadata</definition>
        <argsstring>()</argsstring>
        <name>getMetadata</name>
        <briefdescription>
<para>Gets metadata of the Wave Detector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput><ref refid="structWaveMetadata" kindref="compound">WaveMetadata</ref></computeroutput> struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="129" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1aaa4806eeb2950412dbd779635a2f5667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WaveDetector::shiftWindow</definition>
        <argsstring>(maxlab::FilteredFrameData frame)</argsstring>
        <name>shiftWindow</name>
        <param>
          <type>maxlab::FilteredFrameData</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Shifts the window, adding a new frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>maxlab::FilteredFrameData</computeroutput> frame to add to the window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="137" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1adc15bccbffc715f743bb9c7f0d27d5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WaveDetector::processFrame</definition>
        <argsstring>(maxlab::FilteredFrameData frame, int frameNo)</argsstring>
        <name>processFrame</name>
        <param>
          <type>maxlab::FilteredFrameData</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>int</type>
          <declname>frameNo</declname>
        </param>
        <briefdescription>
<para>Processes a frame. </para>
        </briefdescription>
        <detaileddescription>
<para>Shifts the window, and returns the status of the burst</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>maxlab::FilteredFrameData</computeroutput> frame to process </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameNo</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>int</computeroutput> frame number when <computeroutput>frame</computeroutput> was received </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>int</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="150" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classWaveDetector_1a91b522b3335c62a1b498f5a4d09d1820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WaveDetector::checkBurst</definition>
        <argsstring>(int frameNo)</argsstring>
        <name>checkBurst</name>
        <param>
          <type>int</type>
          <declname>frameNo</declname>
        </param>
        <briefdescription>
<para>Checks the direction of a burst. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameNo</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>int</computeroutput> frame number of the most recently received frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>int</computeroutput>, corresponds to <computeroutput>enum Wave</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="159" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" line="76" column="19" bodyfile="/home/mxwbio/Desktop/HAL/bin/lib/include/waveDetector.h" bodystart="76" bodyend="172"/>
    <listofallmembers>
      <member refid="classWaveDetector_1a006b51609f6cfa1646a8b048b645fa8e" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>burstDoneThreshold</name></member>
      <member refid="classWaveDetector_1a91b522b3335c62a1b498f5a4d09d1820" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>checkBurst</name></member>
      <member refid="classWaveDetector_1a1e0436c40195f6574ca3c2df5b9f5f4c" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>firstBurstThreshold</name></member>
      <member refid="classWaveDetector_1a9517f06ddc7b8f0e2973b12097170986" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>framesPerSec</name></member>
      <member refid="classWaveDetector_1a87a66c6a4abba427c2826e80ca7b7444" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>getMetadata</name></member>
      <member refid="classWaveDetector_1ab85b28fe6599e109456d3e0da0e4306b" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>getWindow</name></member>
      <member refid="classWaveDetector_1a3956713b66b71c3b9b38fc3349c23423" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>metadata</name></member>
      <member refid="classWaveDetector_1ae3598ac880a5f71a318f215124bc98ed" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>minFrames</name></member>
      <member refid="classWaveDetector_1adc15bccbffc715f743bb9c7f0d27d5f8" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>processFrame</name></member>
      <member refid="classWaveDetector_1aaa4806eeb2950412dbd779635a2f5667" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>shiftWindow</name></member>
      <member refid="classWaveDetector_1abb6f03715b1a0d64537b089397a70c05" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>threshold</name></member>
      <member refid="classWaveDetector_1afdc4ad4814343b23503411dd6d7d49d1" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>totalElectrodes</name></member>
      <member refid="classWaveDetector_1a9dc0fec49023ac3a388568180575ee7d" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>WaveDetector</name></member>
      <member refid="classWaveDetector_1aac49842bb930f2bbb174b60855c17aa1" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>WaveDetector</name></member>
      <member refid="classWaveDetector_1a1b03f5ba903e44a002b8c38cb7d28880" prot="private" virt="non-virtual"><scope>WaveDetector</scope><name>window</name></member>
      <member refid="classWaveDetector_1af493cc823e9388b83a3fc6bf8c48b159" prot="public" virt="non-virtual"><scope>WaveDetector</scope><name>~WaveDetector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
